name: build

on: [ push ]
run-name: "Lint, test and build"
jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      PYTHONDONTWRITEBYTECODE: 1
      DJANGO_SETTINGS_MODULE: expense_tracking.settings_test

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: |
            requirements.base.txt
            requirements/dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/base.txt
          pip install -r requirements/dev.txt

      - name: Pre-commit (black, isort, flake8)
        uses: pre-commit/action@v3.0.1

      - name: Mypy
        run: mypy .

  test:
    runs-on: ubuntu-latest
    needs: lint
    env:
      PYTHONDONTWRITEBYTECODE: 1
      DJANGO_SETTINGS_MODULE: expense_tracking.settings_test

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: |
            requirements.base.txt
            requirements/dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/base.txt
          pip install -r requirements/dev.txt

      - name: Django checks
        run: |
          python manage.py check --deploy --fail-level WARNING || true
          python manage.py makemigrations --check --dry-run

      - name: Run tests
        run: pytest -q --maxfail=1 --disable-warnings --cov=. --cov-report=xml

  build:
    needs: test
    runs-on: ubuntu-latest
    env:
      PYTHONDONTWRITEBYTECODE: 1
      DJANGO_SETTINGS_MODULE: expense_tracking.settings_test

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: |
            requirements.base.txt
            requirements/dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/base.txt
          pip install -r requirements/dev.txt

      - name: Django checks
        run: |
          python manage.py check --deploy --fail-level WARNING || true
          python manage.py makemigrations --check --dry-run